   1               		.file	"grn_TWI.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	TWIInit
  12               	TWIInit:
  13               	.LFB1:
  14               		.file 1 "grn_TWI.c"
   1:grn_TWI.c     **** #include <stdio.h>
   2:grn_TWI.c     **** #include <avr/io.h>
   3:grn_TWI.c     **** 
   4:grn_TWI.c     **** 
   5:grn_TWI.c     **** /*    Grundfunktionen TWI Schnittstelle
   6:grn_TWI.c     ****  *    grn, 14.4.2015
   7:grn_TWI.c     ****  *     
   8:grn_TWI.c     ****  */
   9:grn_TWI.c     **** 
  10:grn_TWI.c     **** void TWIInit(void)
  11:grn_TWI.c     **** {
  15               		.loc 1 11 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  12:grn_TWI.c     ****  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  13:grn_TWI.c     ****   PRR =0x00;
  21               		.loc 1 13 0
  22 0000 1092 6400 		sts 100,__zero_reg__
  14:grn_TWI.c     ****  // TWSR |= (1<<TWPS0);                          /* no prescaler */
  15:grn_TWI.c     ****  
  16:grn_TWI.c     ****   
  17:grn_TWI.c     ****   //set sck to 400khz
  18:grn_TWI.c     **** 	TWSR = 0x02;
  23               		.loc 1 18 0
  24 0004 82E0      		ldi r24,lo8(2)
  25 0006 8093 B900 		sts 185,r24
  19:grn_TWI.c     **** 	//TWBR = 0x0C;
  20:grn_TWI.c     **** 	 TWBR = ((16000000/400000)-16)/2;  /* (F_CPU / F_TWI) must be > 10 for stable operation */
  26               		.loc 1 20 0
  27 000a 8CE0      		ldi r24,lo8(12)
  28 000c 8093 B800 		sts 184,r24
  21:grn_TWI.c     **** 	//enable TWI
  22:grn_TWI.c     **** 	TWCR = (1<<TWEN);
  29               		.loc 1 22 0
  30 0010 84E0      		ldi r24,lo8(4)
  31 0012 8093 BC00 		sts 188,r24
  32               	/* epilogue start */
  23:grn_TWI.c     **** }
  33               		.loc 1 23 0
  34 0016 0895      		ret
  35               		.cfi_endproc
  36               	.LFE1:
  38               	.global	TWIStart
  40               	TWIStart:
  41               	.LFB2:
  24:grn_TWI.c     ****  
  25:grn_TWI.c     **** void TWIStart(void)
  26:grn_TWI.c     **** {
  42               		.loc 1 26 0
  43               		.cfi_startproc
  44               	/* prologue: function */
  45               	/* frame size = 0 */
  46               	/* stack size = 0 */
  47               	.L__stack_usage = 0
  27:grn_TWI.c     **** 	TWCR = ((1<<TWINT) | (1<<TWSTA) | (1<<TWEN));
  48               		.loc 1 27 0
  49 0018 84EA      		ldi r24,lo8(-92)
  50 001a 8093 BC00 		sts 188,r24
  51               	.L3:
  28:grn_TWI.c     **** 	while((TWCR & (1<<TWINT)) == 0);
  52               		.loc 1 28 0 discriminator 1
  53 001e 8091 BC00 		lds r24,188
  54 0022 87FF      		sbrs r24,7
  55 0024 00C0      		rjmp .L3
  56               	/* epilogue start */
  29:grn_TWI.c     **** }
  57               		.loc 1 29 0
  58 0026 0895      		ret
  59               		.cfi_endproc
  60               	.LFE2:
  62               	.global	TWIStop
  64               	TWIStop:
  65               	.LFB3:
  30:grn_TWI.c     **** 
  31:grn_TWI.c     **** void TWIStop(void)
  32:grn_TWI.c     **** {
  66               		.loc 1 32 0
  67               		.cfi_startproc
  68               	/* prologue: function */
  69               	/* frame size = 0 */
  70               	/* stack size = 0 */
  71               	.L__stack_usage = 0
  33:grn_TWI.c     **** 	TWCR = ((1<<TWINT) | (1<<TWSTO) | (1<<TWEN));
  72               		.loc 1 33 0
  73 0028 84E9      		ldi r24,lo8(-108)
  74 002a 8093 BC00 		sts 188,r24
  75               	/* epilogue start */
  34:grn_TWI.c     **** } 
  76               		.loc 1 34 0
  77 002e 0895      		ret
  78               		.cfi_endproc
  79               	.LFE3:
  81               	.global	TWIWrite
  83               	TWIWrite:
  84               	.LFB4:
  35:grn_TWI.c     **** 
  36:grn_TWI.c     **** void TWIWrite(uint8_t u8data)
  37:grn_TWI.c     **** {
  85               		.loc 1 37 0
  86               		.cfi_startproc
  87               	.LVL0:
  88               	/* prologue: function */
  89               	/* frame size = 0 */
  90               	/* stack size = 0 */
  91               	.L__stack_usage = 0
  38:grn_TWI.c     **** 	TWDR = u8data;
  92               		.loc 1 38 0
  93 0030 8093 BB00 		sts 187,r24
  39:grn_TWI.c     **** 	TWCR = ((1<<TWINT) | (1<<TWEN));
  94               		.loc 1 39 0
  95 0034 84E8      		ldi r24,lo8(-124)
  96               	.LVL1:
  97 0036 8093 BC00 		sts 188,r24
  98               	.LVL2:
  99               	.L7:
  40:grn_TWI.c     **** 	while((TWCR & (1<<TWINT)) == 0);
 100               		.loc 1 40 0 discriminator 1
 101 003a 8091 BC00 		lds r24,188
 102 003e 87FF      		sbrs r24,7
 103 0040 00C0      		rjmp .L7
 104               	/* epilogue start */
  41:grn_TWI.c     **** }
 105               		.loc 1 41 0
 106 0042 0895      		ret
 107               		.cfi_endproc
 108               	.LFE4:
 110               	.global	TWIReadACK
 112               	TWIReadACK:
 113               	.LFB5:
  42:grn_TWI.c     **** 
  43:grn_TWI.c     **** uint8_t TWIReadACK(void)
  44:grn_TWI.c     **** {
 114               		.loc 1 44 0
 115               		.cfi_startproc
 116               	/* prologue: function */
 117               	/* frame size = 0 */
 118               	/* stack size = 0 */
 119               	.L__stack_usage = 0
  45:grn_TWI.c     **** 	TWCR = ((1<<TWINT) | (1<<TWEN) | (1<<TWEA));
 120               		.loc 1 45 0
 121 0044 84EC      		ldi r24,lo8(-60)
 122 0046 8093 BC00 		sts 188,r24
 123               	.L10:
  46:grn_TWI.c     **** 	while((TWCR & (1<<TWINT)) == 0);
 124               		.loc 1 46 0 discriminator 1
 125 004a 8091 BC00 		lds r24,188
 126 004e 87FF      		sbrs r24,7
 127 0050 00C0      		rjmp .L10
  47:grn_TWI.c     **** 	return TWDR;
 128               		.loc 1 47 0
 129 0052 8091 BB00 		lds r24,187
 130               	/* epilogue start */
  48:grn_TWI.c     **** }
 131               		.loc 1 48 0
 132 0056 0895      		ret
 133               		.cfi_endproc
 134               	.LFE5:
 136               	.global	TWIReadNACK
 138               	TWIReadNACK:
 139               	.LFB6:
  49:grn_TWI.c     **** 
  50:grn_TWI.c     **** uint8_t TWIReadNACK(void)
  51:grn_TWI.c     **** {
 140               		.loc 1 51 0
 141               		.cfi_startproc
 142               	/* prologue: function */
 143               	/* frame size = 0 */
 144               	/* stack size = 0 */
 145               	.L__stack_usage = 0
  52:grn_TWI.c     **** 	TWCR = ((1<<TWINT) | (1<<TWEN));
 146               		.loc 1 52 0
 147 0058 84E8      		ldi r24,lo8(-124)
 148 005a 8093 BC00 		sts 188,r24
 149               	.L13:
  53:grn_TWI.c     **** 	while((TWCR & (1<<TWINT)) == 0);
 150               		.loc 1 53 0 discriminator 1
 151 005e 8091 BC00 		lds r24,188
 152 0062 87FF      		sbrs r24,7
 153 0064 00C0      		rjmp .L13
  54:grn_TWI.c     **** 	return TWDR;
 154               		.loc 1 54 0
 155 0066 8091 BB00 		lds r24,187
 156               	/* epilogue start */
  55:grn_TWI.c     **** }
 157               		.loc 1 55 0
 158 006a 0895      		ret
 159               		.cfi_endproc
 160               	.LFE6:
 162               	.global	TWIGetStatus
 164               	TWIGetStatus:
 165               	.LFB7:
  56:grn_TWI.c     **** 
  57:grn_TWI.c     **** uint8_t TWIGetStatus(void)
  58:grn_TWI.c     **** {
 166               		.loc 1 58 0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
  59:grn_TWI.c     **** 	/*  0x08   Start condition sent
  60:grn_TWI.c     **** 	 *  0x10   repeated start condition sent
  61:grn_TWI.c     **** 	 *  0x18   SLA+W transmitted ACK received
  62:grn_TWI.c     **** 	 *  0x20   SLA+W transmitted NACK received
  63:grn_TWI.c     **** 	 *  0x28   data byte sent ACK received
  64:grn_TWI.c     **** 	 *  0x30   data byte sent NACK received
  65:grn_TWI.c     **** 	 *  0x38   Arbitration in SLA+W lost
  66:grn_TWI.c     **** 	 */
  67:grn_TWI.c     **** 	 
  68:grn_TWI.c     **** 	uint8_t status;
  69:grn_TWI.c     **** 	//mask status
  70:grn_TWI.c     **** 	status = TWSR & 0xF8;
 172               		.loc 1 70 0
 173 006c 8091 B900 		lds r24,185
 174               	.LVL3:
  71:grn_TWI.c     **** 	return status;
  72:grn_TWI.c     **** }
 175               		.loc 1 72 0
 176 0070 887F      		andi r24,lo8(-8)
 177               	.LVL4:
 178               	/* epilogue start */
 179 0072 0895      		ret
 180               		.cfi_endproc
 181               	.LFE7:
 183               	.Letext0:
 184               		.file 2 "/usr/avr/include/stdio.h"
 185               		.file 3 "/usr/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 grn_TWI.c
     /tmp/ccKGNDEk.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccKGNDEk.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccKGNDEk.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccKGNDEk.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccKGNDEk.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccKGNDEk.s:12     .text:0000000000000000 TWIInit
     /tmp/ccKGNDEk.s:40     .text:0000000000000018 TWIStart
     /tmp/ccKGNDEk.s:64     .text:0000000000000028 TWIStop
     /tmp/ccKGNDEk.s:83     .text:0000000000000030 TWIWrite
     /tmp/ccKGNDEk.s:112    .text:0000000000000044 TWIReadACK
     /tmp/ccKGNDEk.s:138    .text:0000000000000058 TWIReadNACK
     /tmp/ccKGNDEk.s:164    .text:000000000000006c TWIGetStatus

NO UNDEFINED SYMBOLS
